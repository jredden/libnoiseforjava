package example;

import static org.junit.Assert.assertTrue;
import libnoiseforjava.NoiseGen.NoiseQuality;
import libnoiseforjava.module.Perlin;

import org.junit.Test;

public class ComplexPlanetTest {
	/**
	 * these values with either be generated by an AI engine and (possibly
	 * persisted in the store)
	 */
	// Planet seed. Change this to generate a different planet
	private static Integer SEED = 0;
	// Frequency of the planet's continents. Higher frequency produces smaller,
	// more numerous continents. This value is measured in radians.
	private static Double CONTINENT_FREQUENCY = 1.0;
	// The persistence value controls the roughness of the Perlin noise,
	// normally between 0.0 and 1.0
	private static Double BASE_CONTINENT_DEF_PERSISTENCE_0 = 0.5;
	// Lacunarity. from Latin meaning gap, or fill space
	// Lacunarity of the planet's continents. Changing this value produces
	// slightly different continents. For the best results, this value should
	// be random, but close to 2.0.
	private static Double CONTINENT_LACUNARITY = 2.208984375;
	// Octave count determines the amount of Perlin noise,  the higher the count, the more detail
	private static Integer BASE_CONTINENT_DEF_OCTAVE_COUNT = 14;

	  // 1: [Continent module]: This Perlin-noise module generates the continents.
	  //    This noise module has a high number of octaves so that detail is
	  //    visible at high zoom levels.

	static private Perlin baseContinentDef_pe0 = new Perlin();
	static{
		baseContinentDef_pe0.setSeed(SEED);
		baseContinentDef_pe0.setFrequency(CONTINENT_FREQUENCY);
		baseContinentDef_pe0.setPersistence(BASE_CONTINENT_DEF_PERSISTENCE_0);
		baseContinentDef_pe0.setLacunarity(CONTINENT_LACUNARITY);
		baseContinentDef_pe0.setOctaveCount(BASE_CONTINENT_DEF_OCTAVE_COUNT);
		baseContinentDef_pe0.setNoiseQuality(NoiseQuality.QUALITY_STD);
	}
	
	

	@Test
	public void test() {
	}

}
